import 'package:flutter/material.dart';
import 'package:fl_chart/fl_chart.dart';

void main() => runApp(const RetroBudgetApp());

class RetroBudgetApp extends StatelessWidget {
  const RetroBudgetApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Ретро-бюджет',
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color(0xFF0E1F17),
        colorScheme: const ColorScheme.dark(
          primary: Color(0xFFFFFC94),
          secondary: Color(0xFFFFB347),
        ),
      ),
      home: const HomePage(),
    );
  }
}

class Expense {
  final String category;
  final double amount;
  Expense(this.category, this.amount);
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});
  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  double balance = 1000;
  final List<Expense> expenses = [
    Expense("Їжа", 120),
    Expense("Транспорт", 60),
    Expense("Розваги", 90),
  ];

  void _addExpense() {
    showDialog(
      context: context,
      builder: (context) {
        final categoryController = TextEditingController();
        final amountController = TextEditingController();
        return AlertDialog(
          backgroundColor: Colors.black,
          title: const Text("Додати витрату"),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              TextField(
                controller: categoryController,
                decoration: const InputDecoration(labelText: "Категорія"),
              ),
              TextField(
                controller: amountController,
                decoration: const InputDecoration(labelText: "Сума"),
                keyboardType: TextInputType.number,
              ),
            ],
          ),
          actions: [
            TextButton(
              child: const Text("Скасувати"),
              onPressed: () => Navigator.pop(context),
            ),
            ElevatedButton(
              child: const Text("Додати"),
              onPressed: () {
                setState(() {
                  final amount = double.tryParse(amountController.text) ?? 0;
                  expenses.add(Expense(categoryController.text, amount));
                  balance -= amount;
                });
                Navigator.pop(context);
              },
            ),
          ],
        );
      },
    );
  }

  List<PieChartSectionData> _generateSections() {
    return expenses.map((e) {
      return PieChartSectionData(
        color: Colors.primaries[expenses.indexOf(e) % Colors.primaries.length],
        value: e.amount,
        title: "${e.category}\n${e.amount.toStringAsFixed(0)}",
        radius: 60,
        titleStyle: const TextStyle(fontSize: 12, color: Colors.white),
      );
    }).toList();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Ретро-бюджет"),
        backgroundColor: Colors.black,
      ),
      body: Padding(
        padding: const EdgeInsets.all(12),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text("Баланс: ${balance.toStringAsFixed(2)} ₴",
                style: const TextStyle(fontSize: 20)),
            const SizedBox(height: 12),
            Expanded(
              child: ListView.builder(
                itemCount: expenses.length,
                itemBuilder: (context, index) {
                  final e = expenses[index];
                  return ListTile(
                    leading: const Icon(Icons.money, color: Colors.amber),
                    title: Text(e.category),
                    trailing: Text("-${e.amount.toStringAsFixed(2)} ₴"),
                  );
                },
              ),
            ),
            const SizedBox(height: 12),
            SizedBox(
              height: 200,
              child: PieChart(
                PieChartData(
                  sections: _generateSections(),
                  centerSpaceRadius: 40,
                ),
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _addExpense,
        child: const Icon(Icons.add),
      ),
    );
  }
}
